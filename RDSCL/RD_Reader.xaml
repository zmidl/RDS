<UserControl x:Class="RDSCL.RD_Reader"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RDSCL"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="780" d:DesignWidth="900">
    <UserControl.Resources>
        <system:Double x:Key="StrokeThickness" >10</system:Double>
        
        <Style x:Key="TextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Foreground" Value="{StaticResource GreenColor}"/>
            <Setter Property="FontSize" Value="60"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

    </UserControl.Resources>
    <UserControl.Style>
        <Style TargetType="UserControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="UserControl">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="FlushAnimation">
                                <DoubleAnimation Storyboard.TargetName="Path_WarmAlarm" Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" />
                            </Storyboard>
                        </ControlTemplate.Resources>
                       
                        <Viewbox Stretch="Fill">
                            <Canvas Width="900" Height="780" >
                                <Rectangle Canvas.Left="-250" Canvas.Top="-320" Width="1200" Height="1300" RadiusX="20" RadiusY="20" Stroke="{StaticResource BlueColor}" StrokeThickness="2"/>
                                <StackPanel Canvas.Left="50" Canvas.Top="50" Orientation="Horizontal">
                                    <StackPanel Width="90" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="{StaticResource BlueColor}">
                                        <local:RD_Hole IsTwinkle="{Binding DataSource.EnzymeBottles[0].IsTwinkle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" ContentColor="{Binding DataSource.EnzymeBottles[0].Color,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" Width="68" Margin="0,55,0,0"/>
                                        <local:RD_Hole IsTwinkle="{Binding DataSource.EnzymeBottles[1].IsTwinkle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" ContentColor="{Binding DataSource.EnzymeBottles[1].Color,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" Width="68" Margin="0,25,0,0"/>
                                        <local:RD_Hole IsTwinkle="{Binding DataSource.EnzymeBottles[2].IsTwinkle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" ContentColor="{Binding DataSource.EnzymeBottles[2].Color,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" Width="68" Margin="0,25,0,0"/>
                                        <local:RD_Hole IsTwinkle="{Binding DataSource.EnzymeBottles[3].IsTwinkle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" ContentColor="{Binding DataSource.EnzymeBottles[3].Color,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" Width="68" Margin="0,25,0,0"/>
                                        <local:RD_Hole IsTwinkle="{Binding DataSource.EnzymeBottles[4].IsTwinkle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" ContentColor="{Binding DataSource.EnzymeBottles[4].Color,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" Width="68" Margin="0,25,0,0"/>
                                        <local:RD_Hole IsTwinkle="{Binding DataSource.EnzymeBottles[5].IsTwinkle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" ContentColor="{Binding DataSource.EnzymeBottles[5].Color,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" Width="68" Margin="0,25,0,0"/>
                                    </StackPanel>
                                    <local:RD_Strip Width="90" Number="{Binding DataSource.Strips[0].Number,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" CurrentState="{Binding DataSource.Strips[0].IsLoaded, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" Cells="{Binding DataSource.Strips[0].Cells, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" Margin="50,0,0,0"/>
                                    <local:RD_Strip Width="90" Number="{Binding DataSource.Strips[1].Number,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" CurrentState="{Binding DataSource.Strips[1].IsLoaded, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" Cells="{Binding DataSource.Strips[1].Cells,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" Margin="30,0,0,0"/>
                                    <local:RD_Strip Width="90" Number="{Binding DataSource.Strips[2].Number,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" CurrentState="{Binding DataSource.Strips[2].IsLoaded, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" Cells="{Binding DataSource.Strips[2].Cells,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" Margin="30,0,0,0"/>
                                    <local:RD_Strip Width="90" Number="{Binding DataSource.Strips[3].Number,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" CurrentState="{Binding DataSource.Strips[3].IsLoaded, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" Cells="{Binding DataSource.Strips[3].Cells,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" Margin="30,0,0,0" />
                                    <local:RD_Strip Width="90" Number="{Binding DataSource.Strips[4].Number,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" CurrentState="{Binding DataSource.Strips[4].IsLoaded, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" Cells="{Binding DataSource.Strips[4].Cells,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}}" Margin="150,0,0,0" />
                                </StackPanel>
                              
                                <Path x:Name="Path_WarmAlarm" Data="{StaticResource AlertCircleOutline}" Canvas.Left="430" Canvas.Bottom="-40" Stretch="UniformToFill" Width="100" Fill="Red" >
                                    <Path.Triggers>
                                        <EventTrigger RoutedEvent="Path.Loaded" >
                                            <BeginStoryboard  Storyboard="{StaticResource FlushAnimation}"/>
                                        </EventTrigger>
                                    </Path.Triggers>
                                </Path>

                                <Canvas x:Name="PopupForm" Visibility="Visible">
                                    <TextBlock Canvas.Left="-100" Canvas.Top="-130" Text="{Binding DataSource.Temperature,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}, StringFormat=\{0\}℃}"  Style="{StaticResource TextBlock}" Foreground="{StaticResource GreenColor}"/>

                                    <Line HorizontalAlignment="Right" Canvas.Right="-90" Canvas.Top="138" X1="0" X2="220" Stroke="{StaticResource GreenColor}" StrokeThickness="{StaticResource StrokeThickness}" />
                                    <TextBlock HorizontalAlignment="Right" Canvas.Right="-30" Canvas.Top="50" Text="{Binding DataSource.EnzymeBottles[0].Content,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}, StringFormat=\{0\}%}"  Style="{StaticResource TextBlock}"/>

                                    <Line HorizontalAlignment="Right" Canvas.Right="-90" Canvas.Top="232" X1="0" X2="220" Stroke="{StaticResource GreenColor}" StrokeThickness="{StaticResource StrokeThickness}" />
                                    <TextBlock HorizontalAlignment="Right" Canvas.Right="-30" Canvas.Top="140" Text="{Binding DataSource.EnzymeBottles[1].Volume,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}, StringFormat=\{0\}%}"  Style="{StaticResource TextBlock}"/>

                                    <Line HorizontalAlignment="Right" Canvas.Right="-90" Canvas.Top="325" X1="0" X2="220" Stroke="{StaticResource GreenColor}" StrokeThickness="{StaticResource StrokeThickness}" />
                                    <TextBlock HorizontalAlignment="Right" Canvas.Right="-30" Canvas.Top="230" Text="{Binding DataSource.EnzymeBottles[2].Volume,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}, StringFormat=\{0\}%}" Style="{StaticResource TextBlock}"/>

                                    <Line HorizontalAlignment="Right" Canvas.Right="-90" Canvas.Top="418" X1="0" X2="220" Stroke="{StaticResource GreenColor}" StrokeThickness="{StaticResource StrokeThickness}" />
                                    <TextBlock HorizontalAlignment="Right" Canvas.Right="-30" Canvas.Top="320" Text="{Binding DataSource.EnzymeBottles[3].Volume,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}, StringFormat=\{0\}%}" Style="{StaticResource TextBlock}"/>

                                    <Line HorizontalAlignment="Right" Canvas.Right="-90" Canvas.Top="510" X1="0" X2="220" Stroke="{StaticResource GreenColor}" StrokeThickness="{StaticResource StrokeThickness}" />
                                    <TextBlock HorizontalAlignment="Right" Canvas.Right="-30" Canvas.Top="420" Text="{Binding DataSource.EnzymeBottles[4].Volume,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}, StringFormat=\{0\}%}" Style="{StaticResource TextBlock}"/>

                                    <Line HorizontalAlignment="Right" Canvas.Right="-90" Canvas.Top="604" X1="0" X2="220" Stroke="{StaticResource GreenColor}" StrokeThickness="{StaticResource StrokeThickness}" />
                                    <TextBlock HorizontalAlignment="Right" Canvas.Right="-30" Canvas.Top="510" Text="{Binding DataSource.EnzymeBottles[5].Volume,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Reader}}, StringFormat=\{0\}%}" Style="{StaticResource TextBlock}"/>

                                </Canvas>
                            </Canvas>
                        </Viewbox>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="PopupForm" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=DataSource.IsWarmAlarm}" Value="True">
                                
                                <Setter  Property="Visibility"  TargetName="Path_WarmAlarm" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=DataSource.IsWarmAlarm}" Value="False">
                                
                                <Setter  Property="Visibility"  TargetName="Path_WarmAlarm" Value="Hidden" />
                            </DataTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Style>
   
</UserControl>
