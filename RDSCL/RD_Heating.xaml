<UserControl x:Class="RDSCL.RD_Heating"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RDSCL"
             mc:Ignorable="d" 
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             d:DesignHeight="780" d:DesignWidth="642">
    <UserControl.Resources>

        <Storyboard x:Key="TwinkleAnimation" >
            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="0:0:1"  />
        </Storyboard>
        
        <system:Double x:Key="StrokeThickness" >10</system:Double>

        <Style x:Key="TextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{StaticResource BlueColor}"/>
            <Setter Property="FontSize" Value="60"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <LinearGradientBrush x:Key="ContentColorMask" EndPoint="1,0.5" StartPoint="0,0.5">
            <GradientStop Color="#CC0E0E0E" Offset="0.992"/>
            <GradientStop Color="#00D3D1D1"/>
        </LinearGradientBrush>
    </UserControl.Resources>
    <UserControl.Style>
        <Style TargetType="UserControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="UserControl">
                        <ControlTemplate.Resources>
                            
                            <Storyboard x:Key="FlushAnimation">
                                <DoubleAnimation Storyboard.TargetName="Path_WarmAlarm" Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" />
                               
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Viewbox Stretch="Fill">
                            <Canvas Width="642" Height="780" >
                                <Rectangle  Width="642" Height="780" RadiusX="20" RadiusY="20" Stroke="{StaticResource BlueColor}" StrokeThickness="2"/>
                                <StackPanel Canvas.Left="70" Canvas.Top="50" Height="680" Width="370" Orientation="Horizontal">
                                    <local:RD_Strip Width="90" IsMoving="{Binding DataSource.Strips[0].IsMoving,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Heating}}}" Number="{Binding DataSource.Strips[0].Number,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Heating}}}" CurrentState="{Binding DataSource.Strips[0].IsLoaded, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Heating}}}" Cells="{Binding DataSource.Strips[0].Cells, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Heating}}}"/>
                                    <local:RD_Strip Width="90" IsMoving="{Binding DataSource.Strips[1].IsMoving,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Heating}}}" Number="{Binding DataSource.Strips[1].Number,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Heating}}}" CurrentState="{Binding DataSource.Strips[1].IsLoaded, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Heating}}}" Cells="{Binding DataSource.Strips[1].Cells,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Heating}}}" Margin="2,0,0,0" />
                                    <local:RD_Strip Width="90" IsMoving="{Binding DataSource.Strips[2].IsMoving,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Heating}}}" Number="{Binding DataSource.Strips[2].Number,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Heating}}}" CurrentState="{Binding DataSource.Strips[2].IsLoaded, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Heating}}}" Cells="{Binding DataSource.Strips[2].Cells,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Heating}}}" Margin="2,0,0,0" />
                                    <local:RD_Strip Width="90" IsMoving="{Binding DataSource.Strips[3].IsMoving,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Heating}}}" Number="{Binding DataSource.Strips[3].Number,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Heating}}}" CurrentState="{Binding DataSource.Strips[3].IsLoaded, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Heating}}}" Cells="{Binding DataSource.Strips[3].Cells,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Heating}}}" Margin="2,0,0,0" />
                                </StackPanel>
                                <Rectangle x:Name="ReagentContent"  Fill="{Binding DataSource.OlefinBox.Color,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Heating}}}" Canvas.Left="473" Canvas.Top="170" Width="94" Height="444" RadiusX="4" RadiusY="4" />
                                <Rectangle Stroke="{StaticResource BlueColor}" StrokeThickness="10" Canvas.Left="473" Canvas.Top="170" Width="94" Height="444" RadiusX="4" RadiusY="4" />
                                <Canvas x:Name="PopupForm" Visibility="Hidden" >
                                    <Path Canvas.Left="480" Canvas.Top="140"  Stroke="{StaticResource BlueColor}" StrokeThickness="{StaticResource StrokeThickness}" Data="M0,0 L 50,-50 150,-50"/>
                                    <TextBlock Canvas.Left="530"  Text="{Binding DataSource.Temperature,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Heating}}, StringFormat=\{0\}℃}"  Style="{StaticResource TextBlock}" Foreground="{StaticResource BlueColor}"/>

                                    <Path Canvas.Left="530" Canvas.Top="350" Stroke="{StaticResource BlueColor}" StrokeThickness="{StaticResource StrokeThickness}" Data="M0,0 L 50,-50 130,-50"/>
                                    <TextBlock Canvas.Left="580" Canvas.Top="210" Text="{Binding DataSource.OlefinBox.Volume,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RD_Heating}}, StringFormat=\{0\}%}"  Style="{StaticResource TextBlock}"/>
                                </Canvas>

                                <Path x:Name="Path_WarmAlarm" Data="{StaticResource AlertCircleOutline}" Canvas.Right="50" Canvas.Bottom="20" Stretch="UniformToFill" Width="100" Fill="Red" >
                                    <Path.Triggers>
                                        <EventTrigger RoutedEvent="Path.Loaded" >
                                            <BeginStoryboard  Storyboard="{StaticResource FlushAnimation}"/>
                                        </EventTrigger>
                                    </Path.Triggers>
                                </Path>
                            </Canvas>
                        </Viewbox>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="PopupForm" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=DataSource.IsWarmAlarm}" Value="True">
                               
                                <Setter  Property="Visibility"  TargetName="Path_WarmAlarm" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=DataSource.IsWarmAlarm}" Value="False">
                               
                                <Setter  Property="Visibility"  TargetName="Path_WarmAlarm" Value="Hidden" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Style>
</UserControl>
