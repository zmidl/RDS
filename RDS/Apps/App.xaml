<Application
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" 
    xmlns:System="clr-namespace:System;assembly=System" 
    x:Class="RDS.Apps.App">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Languages/zh-CN.xaml"/>
                <ResourceDictionary Source="Languages/en-US.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!--Brush-->
            <SolidColorBrush x:Key="GridLine" Color="White"/>
            <SolidColorBrush x:Key="PressedForeground" Color="#FF35AAF7"/>
            <SolidColorBrush x:Key="TextForeground2" Color="#FFF9BD3E"/>
            <SolidColorBrush x:Key="TextForeground" Color="#FFD8D8D8"/>
            <SolidColorBrush x:Key="TextForeground3" Color="#FF97C300"/>
            <SolidColorBrush x:Key="TextForeground4" Color="#FFA1D0FF"/>
            <SolidColorBrush x:Key="RD_TextBoxBackground" Color="Black"/>
            <LinearGradientBrush x:Key="RD_TextBoxBorderBrush" EndPoint="0.5,1.003" StartPoint="0.5,0.087">
                <GradientStop Color="Black" Offset="0"/>
                <GradientStop Color="#FF727272" Offset="1"/>
                <GradientStop Color="#FF2C2C2C" Offset="0.257"/>
                <GradientStop Color="#FF555555" Offset="0.771"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="RectangleContainerBackground" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="White"/>
                <!--<GradientStop Color="#FF232323" Offset="1"/>-->
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="RectangleContainerStroke" EndPoint="0.512,1.3" StartPoint="0.5,-0.183">
                <GradientStop Color="Black" Offset="0"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="HorizontalLineFill" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF383838" Offset="0"/>
                <GradientStop Color="#FF4B4B4B" Offset="1"/>
                <GradientStop Color="#FF5D5D5D" Offset="0.56"/>
                <GradientStop Color="#FF252525" Offset="0.547"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="MainViewTitleLine" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF535353"/>
                <GradientStop Color="#FFF1F1F1" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="TitleBackground_Bright" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF003A7C" Offset="1"/>
                <GradientStop Color="#FF3C94FD"/>
                <GradientStop Color="#FF0064D6" Offset="0.946"/>
            </LinearGradientBrush>

            <!--Effect-->
            <DropShadowEffect x:Key="TreeViewEffect" ShadowDepth="1" BlurRadius="2"/>
            <DropShadowEffect x:Key="TitleEffect" BlurRadius="3" ShadowDepth="3" Color="#FF4B4B4B"/>
            <DropShadowEffect x:Key="ContentEffect" Direction="270"/>
            <BlurEffect x:Key="RectangleContainerEffect" Radius="2"/>
            <DropShadowEffect x:Key="TextEffect" BlurRadius="10" ShadowDepth="2"/>
            <DropShadowEffect x:Key="IconEffect" BlurRadius="10" Color="#FF6C6C6C" ShadowDepth="2"/>

            <!--Path-->
            <PathGeometry x:Key="Instrument" Figures="M9.46,6.28L11.05,9C8.47,9.26 6.5,11.41 6.5,14A5,5 0 0,0 11.5,19C13.55,19 15.31,17.77 16.08,16H13.5V14H21.5V16H19.25C18.84,17.57 17.97,18.96 16.79,20H19.5V22H3.5V20H6.21C4.55,18.53 3.5,16.39 3.5,14C3.5,10.37 5.96,7.2 9.46,6.28M12.74,2.07L13.5,3.37L14.36,2.87L17.86,8.93L14.39,10.93L10.89,4.87L11.76,4.37L11,3.07L12.74,2.07Z" />
            <PathGeometry x:Key="WasteBasket" Figures="M21.03,3L18,20.31C17.83,21.27 17,22 16,22H8C7,22 6.17,21.27 6,20.31L2.97,3H21.03M5.36,5L8,20H16L18.64,5H5.36M9,18V14H13V18H9M13,13.18L9.82,10L13,6.82L16.18,10L13,13.18Z"/>
            <PathGeometry x:Key="WasteBucket" Figures="M12,5.76C15.06,5.77 17.55,5.24 17.55,4.59C17.55,3.94 15.07,3.41 12,3.4C8.94,3.4 6.45,3.92 6.45,4.57C6.45,5.23 8.93,5.76 12,5.76M12,14.4C13.5,14.4 14.75,13.16 14.75,11.64A2.75,2.75 0 0,0 12,8.89C10.5,8.89 9.25,10.12 9.25,11.64C9.25,13.16 10.5,14.4 12,14.4M12,2C16.77,2 20.66,3.28 20.66,4.87C20.66,5.29 19.62,11.31 19.21,13.69C19.03,14.76 16.26,16.33 12,16.33V16.31L12,16.33C7.74,16.33 4.97,14.76 4.79,13.69C4.38,11.31 3.34,5.29 3.34,4.87C3.34,3.28 7.23,2 12,2M18.23,16.08C18.38,16.08 18.53,16.19 18.53,16.42V16.5C18.19,18.26 17.95,19.5 17.91,19.71C17.62,21 15.07,22 12,22V22C8.93,22 6.38,21 6.09,19.71C6.05,19.5 5.81,18.26 5.47,16.5V16.42C5.47,16.19 5.62,16.08 5.77,16.08C5.91,16.08 6,16.17 6,16.17C6,16.17 8.14,17.86 12,17.86C15.86,17.86 18,16.17 18,16.17C18,16.17 18.09,16.08 18.23,16.08M13.38,11.64C13.38,12.4 12.76,13 12,13C11.24,13 10.62,12.4 10.62,11.64A1.38,1.38 0 0,1 12,10.26A1.38,1.38 0 0,1 13.38,11.64Z"/>
            <PathGeometry x:Key="Clock" Figures="M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22C6.47,22 2,17.5 2,12A10,10 0 0,1 12,2M12.5,7V12.25L17,14.92L16.25,16.15L11,13V7H12.5Z"/>
            <PathGeometry x:Key="AccountSettingsVariant" Figures="M9,4A4,4 0 0,0 5,8A4,4 0 0,0 9,12A4,4 0 0,0 13,8A4,4 0 0,0 9,4M9,14C6.33,14 1,15.33 1,18V20H12.08C12.03,19.67 12,19.34 12,19C12,17.5 12.5,16 13.41,14.8C11.88,14.28 10.18,14 9,14M18,14C17.87,14 17.76,14.09 17.74,14.21L17.55,15.53C17.25,15.66 16.96,15.82 16.7,16L15.46,15.5C15.35,15.5 15.22,15.5 15.15,15.63L14.15,17.36C14.09,17.47 14.11,17.6 14.21,17.68L15.27,18.5C15.25,18.67 15.24,18.83 15.24,19C15.24,19.17 15.25,19.33 15.27,19.5L14.21,20.32C14.12,20.4 14.09,20.53 14.15,20.64L15.15,22.37C15.21,22.5 15.34,22.5 15.46,22.5L16.7,22C16.96,22.18 17.24,22.35 17.55,22.47L17.74,23.79C17.76,23.91 17.86,24 18,24H20C20.11,24 20.22,23.91 20.24,23.79L20.43,22.47C20.73,22.34 21,22.18 21.27,22L22.5,22.5C22.63,22.5 22.76,22.5 22.83,22.37L23.83,20.64C23.89,20.53 23.86,20.4 23.77,20.32L22.7,19.5C22.72,19.33 22.74,19.17 22.74,19C22.74,18.83 22.73,18.67 22.7,18.5L23.76,17.68C23.85,17.6 23.88,17.47 23.82,17.36L22.82,15.63C22.76,15.5 22.63,15.5 22.5,15.5L21.27,16C21,15.82 20.73,15.65 20.42,15.53L20.23,14.21C20.22,14.09 20.11,14 20,14M19,17.5A1.5,1.5 0 0,1 20.5,19A1.5,1.5 0 0,1 19,20.5C18.16,20.5 17.5,19.83 17.5,19A1.5,1.5 0 0,1 19,17.5Z"/>
            <PathGeometry x:Key="Information" Figures="M13.5,4A1.5,1.5 0 0,0 12,5.5A1.5,1.5 0 0,0 13.5,7A1.5,1.5 0 0,0 15,5.5A1.5,1.5 0 0,0 13.5,4M13.14,8.77C11.95,8.87 8.7,11.46 8.7,11.46C8.5,11.61 8.56,11.6 8.72,11.88C8.88,12.15 8.86,12.17 9.05,12.04C9.25,11.91 9.58,11.7 10.13,11.36C12.25,10 10.47,13.14 9.56,18.43C9.2,21.05 11.56,19.7 12.17,19.3C12.77,18.91 14.38,17.8 14.54,17.69C14.76,17.54 14.6,17.42 14.43,17.17C14.31,17 14.19,17.12 14.19,17.12C13.54,17.55 12.35,18.45 12.19,17.88C12,17.31 13.22,13.4 13.89,10.71C14,10.07 14.3,8.67 13.14,8.77Z"/>
            <PathGeometry x:Key="Sun" Figures="M3.55,18.54L4.96,19.95L6.76,18.16L5.34,16.74M11,22.45C11.32,22.45 13,22.45 13,22.45V19.5H11M12,5.5A6,6 0 0,0 6,11.5A6,6 0 0,0 12,17.5A6,6 0 0,0 18,11.5C18,8.18 15.31,5.5 12,5.5M20,12.5H23V10.5H20M17.24,18.16L19.04,19.95L20.45,18.54L18.66,16.74M20.45,4.46L19.04,3.05L17.24,4.84L18.66,6.26M13,0.55H11V3.5H13M4,10.5H1V12.5H4M6.76,4.84L4.96,3.05L3.55,4.46L5.34,6.26L6.76,4.84Z"/>
            <PathGeometry x:Key="AlertCircleOutline" Figures="M11,15H13V17H11V15M11,7H13V13H11V7M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20Z"/>
            <PathGeometry x:Key="Power" Figures="M16.56,5.44L15.11,6.89C16.84,7.94 18,9.83 18,12A6,6 0 0,1 12,18A6,6 0 0,1 6,12C6,9.83 7.16,7.94 8.88,6.88L7.44,5.44C5.36,6.88 4,9.28 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12C20,9.28 18.64,6.88 16.56,5.44M13,3H11V13H13"/>
            <PathGeometry x:Key="PlayOrPause" Figures="M3,5V19L11,12M13,19H16V5H13M18,5V19H21V5"/>
            <PathGeometry x:Key="Water" Figures="M12,20A6,6 0 0,1 6,14C6,10 12,3.25 12,3.25C12,3.25 18,10 18,14A6,6 0 0,1 12,20Z"/>
            <PathGeometry x:Key="ExternalTemperature" Figures="M17,3H21V5H17V3M17,7H21V9H17V7M17,11H21V13H17.75L17,12.1V11M21,15V17H19C19,16.31 18.9,15.63 18.71,15H21M17,17A5,5 0 0,1 12,22A5,5 0 0,1 7,17C7,15.36 7.79,13.91 9,13V5A3,3 0 0,1 12,2A3,3 0 0,1 15,5V13C16.21,13.91 17,15.36 17,17M11,8V14.17C9.83,14.58 9,15.69 9,17A3,3 0 0,0 12,20A3,3 0 0,0 15,17C15,15.69 14.17,14.58 13,14.17V8H11M7,3V5H3V3H7M7,7V9H3V7H7M7,11V12.1L6.25,13H3V11H7M3,15H5.29C5.1,15.63 5,16.31 5,17H3V15Z"/>
            <PathGeometry x:Key="InternalTemperature" Figures="M17,17A5,5 0 0,1 12,22A5,5 0 0,1 7,17C7,15.36 7.79,13.91 9,13V5A3,3 0 0,1 12,2A3,3 0 0,1 15,5V13C16.21,13.91 17,15.36 17,17M11,8V14.17C9.83,14.58 9,15.69 9,17A3,3 0 0,0 12,20A3,3 0 0,0 15,17C15,15.69 14.17,14.58 13,14.17V8H11Z"/>
            <PathGeometry x:Key="Emergency" Figures="M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M13,7H11V11H7V13H11V17H13V13H17V11H13V7Z"/>
            <PathGeometry x:Key="CurrentTask" Figures="M21,17V5H3V17H21M21,3A2,2 0 0,1 23,5V17A2,2 0 0,1 21,19H16V21H8V19H3A2,2 0 0,1 1,17V5A2,2 0 0,1 3,3H21M5,7H11V11H5V7M5,13H11V15H5V13M13,7H19V9H13V7M13,11H19V15H13V11Z"/>
            <PathGeometry x:Key="Experiment" Figures="M5,19A1,1 0 0,0 6,20H18A1,1 0 0,0 19,19C19,18.79 18.93,18.59 18.82,18.43L13,8.35V4H11V8.35L5.18,18.43C5.07,18.59 5,18.79 5,19M6,22A3,3 0 0,1 3,19C3,18.4 3.18,17.84 3.5,17.37L9,7.81V6A1,1 0 0,1 8,5V4A2,2 0 0,1 10,2H14A2,2 0 0,1 16,4V5A1,1 0 0,1 15,6V7.81L20.5,17.37C20.82,17.84 21,18.4 21,19A3,3 0 0,1 18,22H6M13,16L14.34,14.66L16.27,18H7.73L10.39,13.39L13,16M12.5,12A0.5,0.5 0 0,1 13,12.5A0.5,0.5 0 0,1 12.5,13A0.5,0.5 0 0,1 12,12.5A0.5,0.5 0 0,1 12.5,12Z"/>
            <PathGeometry x:Key="Monitor" Figures="M21,16H3V4H21M21,2H3C1.89,2 1,2.89 1,4V16A2,2 0 0,0 3,18H10V20H8V22H16V20H14V18H21A2,2 0 0,0 23,16V4C23,2.89 22.1,2 21,2Z"/>
            <PathGeometry x:Key="Histroy" Figures="M22,21H2V3H4V19H6V10H10V19H12V6H16V19H18V14H22V21Z"/>
            <PathGeometry x:Key="Help" Figures="M19,2L14,6.5V17.5L19,13V2M6.5,5C4.55,5 2.45,5.4 1,6.5V21.16C1,21.41 1.25,21.66 1.5,21.66C1.6,21.66 1.65,21.59 1.75,21.59C3.1,20.94 5.05,20.5 6.5,20.5C8.45,20.5 10.55,20.9 12,22C13.35,21.15 15.8,20.5 17.5,20.5C19.15,20.5 20.85,20.81 22.25,21.56C22.35,21.61 22.4,21.59 22.5,21.59C22.75,21.59 23,21.34 23,21.09V6.5C22.4,6.05 21.75,5.75 21,5.5V7.5L21,13V19C19.9,18.65 18.7,18.5 17.5,18.5C15.8,18.5 13.35,19.15 12,20V13L12,8.5V6.5C10.55,5.4 8.45,5 6.5,5V5Z"/>
            <PathGeometry x:Key="Password" Figures="M12,17A2,2 0 0,0 14,15C14,13.89 13.1,13 12,13A2,2 0 0,0 10,15A2,2 0 0,0 12,17M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6A2,2 0 0,1 4,20V10C4,8.89 4.9,8 6,8H7V6A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,3A3,3 0 0,0 9,6V8H15V6A3,3 0 0,0 12,3Z"/>
            <PathGeometry x:Key="Add" Figures="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z"/>
            <PathGeometry x:Key="Remove" Figures="M19,13H5V11H19V13Z"/>
            <PathGeometry x:Key="FileImport" Figures="M6,2C4.89,2 4,2.9 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M13,3.5L18.5,9H13M10.05,11.22L12.88,14.05L15,11.93V19H7.93L10.05,16.88L7.22,14.05"/>
            <PathGeometry x:Key="FileStretch" Figures="M9,13A3,3 0 0,0 12,16A3,3 0 0,0 15,13A3,3 0 0,0 12,10A3,3 0 0,0 9,13M20,19.59V8L14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18C18.45,22 18.85,21.85 19.19,21.6L14.76,17.17C13.96,17.69 13,18 12,18A5,5 0 0,1 7,13A5,5 0 0,1 12,8A5,5 0 0,1 17,13C17,14 16.69,14.96 16.17,15.75L20,19.59Z"/>
            <PathGeometry x:Key="Replay" Figures="M12,5V1L7,6L12,11V7A6,6 0 0,1 18,13A6,6 0 0,1 12,19A6,6 0 0,1 6,13H4A8,8 0 0,0 12,21A8,8 0 0,0 20,13A8,8 0 0,0 12,5Z"/>
            <PathGeometry x:Key="Close" Figures="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"/>
            <PathGeometry x:Key="Minimize" Figures="M20,14H4V10H20"/>
            <PathGeometry x:Key="Upload" Figures="M9,16V10H5L12,3L19,10H15V16H9M5,20V18H19V20H5Z"/>
            <PathGeometry x:Key="Download" Figures="M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z"/>
            <PathGeometry x:Key="Ok" Figures="M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4M11,16.5L6.5,12L7.91,10.59L11,13.67L16.59,8.09L18,9.5L11,16.5Z"/>
            <PathGeometry x:Key="Cancel" Figures="M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2C6.47,2 2,6.47 2,12C2,17.53 6.47,22 12,22C17.53,22 22,17.53 22,12C22,6.47 17.53,2 12,2M14.59,8L12,10.59L9.41,8L8,9.41L10.59,12L8,14.59L9.41,16L12,13.41L14.59,16L16,14.59L13.41,12L16,9.41L14.59,8Z"/>
            <PathGeometry x:Key="DoubleRight" Figures="M5.59,7.41L7,6L13,12L7,18L5.59,16.59L10.17,12L5.59,7.41M11.59,7.41L13,6L19,12L13,18L11.59,16.59L16.17,12L11.59,7.41Z"/>
            <PathGeometry x:Key="DoubleDown" Figures="M16.59,5.59L18,7L12,13L6,7L7.41,5.59L12,10.17L16.59,5.59M16.59,11.59L18,13L12,19L6,13L7.41,11.59L12,16.17L16.59,11.59Z"/>
            <PathGeometry x:Key="DoubleLeft" Figures="M18.41,7.41L17,6L11,12L17,18L18.41,16.59L13.83,12L18.41,7.41M12.41,7.41L11,6L5,12L11,18L12.41,16.59L7.83,12L12.41,7.41Z"/>
            <PathGeometry x:Key="Eraser" Figures="M16.24,3.56L21.19,8.5C21.97,9.29 21.97,10.55 21.19,11.34L12,20.53C10.44,22.09 7.91,22.09 6.34,20.53L2.81,17C2.03,16.21 2.03,14.95 2.81,14.16L13.41,3.56C14.2,2.78 15.46,2.78 16.24,3.56M4.22,15.58L7.76,19.11C8.54,19.9 9.8,19.9 10.59,19.11L14.12,15.58L9.17,10.63L4.22,15.58Z"/>
            <PathGeometry x:Key="Hand" Figures="M10,2A2,2 0 0,1 12,4V8.5C12,8.5 14,8.25 14,9.25C14,9.25 16,9 16,10C16,10 18,9.75 18,10.75C18,10.75 20,10.5 20,11.5V15C20,16 17,21 17,22H9C9,22 7,15 4,13C4,13 3,7 8,12V4A2,2 0 0,1 10,2Z"/>
            <PathGeometry x:Key="Play" Figures="M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M10,16.5L16,12L10,7.5V16.5Z"/>
            <PathGeometry x:Key="Stop" Figures="M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4M9,9V15H15V9"/>

            <!--Style-->
            <Style x:Key="LineStyle" TargetType="{x:Type Line}">
                <Setter Property="StrokeThickness" Value="2"/>
                <Setter Property="Stroke" Value="#FFCDCDCD"/>
            </Style>

            <Style x:Key="LineStyle2" TargetType="{x:Type Line}">
                <Setter Property="StrokeThickness" Value="4"/>
                <Setter Property="Stroke">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                            <GradientStop Color="#FF2E2E2E" Offset="0"/>
                            <GradientStop Color="#FF2E2E2E" Offset="1"/>
                            <GradientStop Color="#FF9B9B9B" Offset="0.569"/>
                            <GradientStop Color="Black" Offset="0.559"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="{StaticResource TextForeground3}"/>
            </Style>

            <Style x:Key="RectangleContainerStyle" TargetType="{x:Type Rectangle}">
                <Setter Property="Fill" Value="#33000000"/>
                <Setter Property="Effect" Value="{StaticResource RectangleContainerEffect}"/>
                <Setter Property="Stroke" Value="{StaticResource RectangleContainerStroke}"/>
                <Setter Property="Width" Value="900"/>
                <Setter Property="Height" Value="460"/>
                <Setter Property="Canvas.Left" Value="25"/>
                <Setter Property="Canvas.Top" Value="20"/>
                <Setter Property="RadiusX" Value="10"/>
                <Setter Property="RadiusY" Value="10"/>
            </Style>

            <Style x:Key="RD_ButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderThickness="2" BorderBrush="{StaticResource PressedForeground}" SnapsToDevicePixels="true" Background="{StaticResource PressedForeground}" >
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource TextForeground3 }"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextForeground3 }"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource PressedForeground}"/>
                                    <Setter TargetName="border" Property="Background" Value="White"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PressedForeground }"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">

                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RD_LabelButtonStyle" TargetType="{x:Type CheckBox}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Viewbox>
                                <Canvas x:Name="Frame" Width="350" Height="80" Background="{StaticResource PressedForeground}">
                                    <ContentPresenter x:Name="contentPresenter"  Focusable="False"  RecognizesAccessKey="True"/>
                                </Canvas>
                            </Viewbox>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Frame" Property="Background" Value="{StaticResource TextForeground3}"/>
                                   
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">

                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">

                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="Frame" Property="Background" Value="White"/>
                                    <Setter Property="Foreground" Value="{StaticResource PressedForeground}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter Property="Foreground" Value="{StaticResource  TextForeground}"/>
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsChecked" Value="true"/>
                                        <Condition Property="IsMouseOver" Value="true"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Frame" Property="Background" Value="White"/>
                                    <Setter Property="Foreground" Value="{StaticResource PressedForeground}"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RD_EllipseButtonStyle" TargetType="{x:Type Button}">
                <Style.Resources>
                </Style.Resources>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="{StaticResource PressedForeground}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Viewbox>
                                <Canvas Width="30" Height="30">
                                    <Ellipse x:Name="border" Fill="{TemplateBinding Background}" Width="30" Height="30" SnapsToDevicePixels="true"/>
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Canvas>
                            </Viewbox>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter TargetName="border" Property="Fill" Value="{StaticResource PressedForeground}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" Value="{StaticResource TextForeground3}"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" Value="White"/>
                                    <Setter Property="Foreground" Value="{StaticResource PressedForeground}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">

                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RD_EllipseButtonStyle2" TargetType="{x:Type Button}">
                <Style.Resources>
                </Style.Resources>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{StaticResource PressedForeground}"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Viewbox>
                                <Canvas Width="30" Height="30">
                                    <Ellipse x:Name="border" Fill="{TemplateBinding Background}" Width="30" Height="30" SnapsToDevicePixels="true"/>
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Canvas>
                            </Viewbox>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter  Property="Background" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource TextForeground3}"/>

                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource TextForeground3}"/>

                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">

                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RD_DataGridBrightStyle" TargetType="{x:Type DataGrid}">
                <Setter Property="Foreground" Value="{StaticResource PressedForeground}"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="CanUserSortColumns" Value="False"/>
                <Setter Property="IsReadOnly" Value="False"/>
                <Setter Property="CanUserResizeColumns" Value="False"/>
                <Setter Property="CanUserResizeRows" Value="False"/>
                <Setter Property="SelectionMode" Value="Single"/>
                <Setter Property="CanUserReorderColumns" Value="False"/>
                <Setter Property="AlternationCount" Value="2"/>
                <Setter Property="RowHeaderWidth" Value="0"/>
                <Setter Property="CanUserAddRows" Value="False"/>
                <Setter Property="Background" Value="#FF65B2FF"/>
                <Setter Property="BorderBrush" Value="#FF65B2FF" />
                <Setter Property="BorderThickness" Value="2"/>
                <!--设置横轴网格线颜色-->
                <Setter Property="HorizontalGridLinesBrush">
                    <Setter.Value>
                        <SolidColorBrush/>
                    </Setter.Value>
                </Setter>
                <!--设置纵轴网格线颜色-->
                <Setter Property="VerticalGridLinesBrush">
                    <Setter.Value>
                        <SolidColorBrush/>
                    </Setter.Value>
                </Setter>

                <Setter Property="ColumnHeaderStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="MinWidth" Value="0" />
                            <Setter Property="MinHeight" Value="23" />
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="DataGridColumnHeader">
                                        <Border x:Name="BackgroundBorder" BorderBrush="{StaticResource GridLine}" Background="{StaticResource PressedForeground}" Width="Auto" BorderThickness="1,0,1,0">
                                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center"  Foreground="White" FontWeight="Bold" FontSize="13">
                                                    <ContentPresenter  Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                            </TextBlock>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Height" Value="26"/>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="CellStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridCell">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="DataGridCell">
                                        <Border x:Name="BackgroundBorder" BorderBrush="{StaticResource GridLine}" Margin="0,0,-1,0" Width="Auto" BorderThickness="1,0,1,0">
                                            <TextBlock TextAlignment="Center" VerticalAlignment="Center"  >
                                                <ContentPresenter />
                                            </TextBlock>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="True"/>
                                                    <Condition Property="IsFocused" Value="False"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Foreground" Value="{StaticResource PressedForeground}"/>
                                            </MultiTrigger>

                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="True"/>
                                                    <Condition Property="IsFocused" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Foreground" Value="{StaticResource PressedForeground}"/>
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                    </Setter.Value>
                </Setter>
                <Setter Property="RowStyle">
                    <Setter.Value>
                        <Style  TargetType="DataGridRow">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Setter Property="Height" Value="21"/>

                            <Style.Triggers>
                                <!--隔行换色-->
                                <Trigger Property="AlternationIndex" Value="0" >
                                    <Setter Property="Background" Value="#FFD6ECFF" />
                                    <Setter Property="Foreground" Value="{StaticResource TextForeground3}"/>
                                    <Setter Property="FontSize" Value="12"/>
                                </Trigger>

                                <Trigger Property="AlternationIndex" Value="1" >
                                    <Setter Property="Background" Value="#FFEAF5FF" />
                                    <Setter Property="Foreground" Value="{StaticResource TextForeground3}"/>
                                    <Setter Property="FontSize" Value="12"/>
                                </Trigger>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource TextForeground3}"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>

                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource PressedForeground}"/>
                                    <Setter Property="Background" Value="White"/>
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{StaticResource TextForeground3}"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </MultiTrigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RD_ElipseCheckBoxStyle" TargetType="{x:Type CheckBox}">
                <Style.Resources>
                    <SolidColorBrush x:Key="MouseOver" Color="#FF0036C7"/>
                </Style.Resources>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{StaticResource TextForeground}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Viewbox>
                                <Canvas x:Name="templateRoot" Width="100" Height="100" Background="Transparent" SnapsToDevicePixels="True" Clip="M50,00 A50,50 0,1,1 40,1">
                                    <Ellipse x:Name="BackgroundColor" Fill="{StaticResource PressedForeground}" Width="100" Height="100" StrokeThickness="4"/>
                                    <Path x:Name="Content" Visibility="Hidden" Stroke="White"  StrokeThickness="10" Data="M25,46 L40,60 70,30" Height="39.951" Canvas.Left="23.5" Stretch="Fill" Canvas.Top="28.5" Width="55.536"/>
                                    <ContentPresenter x:Name="contentPresenter"  Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Canvas>
                            </Viewbox>
                            <ControlTemplate.Triggers>

                                <Trigger Property="IsMouseOver" Value="true">
                                    <!--<Setter TargetName="Content" Property="Effect" Value="{StaticResource ContentEffect}"/>-->
                                    <Setter TargetName="BackgroundColor" Property="Stroke" Value="White"/>
                                </Trigger>

                                <Trigger Property="IsPressed" Value="true">

                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource PressedForeground}"/>
                                    <Setter TargetName="Content" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="Content" Property="Visibility" Value="Hidden"/>
                                    <!--<Setter TargetName="Content" Property="Effect" Value="{x:Null}"/>-->
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RD_ElipseCheckBoxStyle2" TargetType="{x:Type CheckBox}">
                <Style.Resources>
                    <RadialGradientBrush x:Key="MouseOver" Center="0.5,0.512" GradientOrigin="0.501,0.543">
                        <GradientStop Color="#7FAA8E65" Offset="0.972"/>
                        <GradientStop Color="#7FECECEC" Offset="1"/>
                        <GradientStop Color="#7FFF9700"/>
                    </RadialGradientBrush>
                </Style.Resources>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{StaticResource TextForeground}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Viewbox>
                                <Canvas x:Name="templateRoot" Width="100" Height="100" Background="Transparent" SnapsToDevicePixels="True" Clip="M50,00 A50,50 0,1,1 40,1">
                                    <Ellipse x:Name="BackgroundColor" Width="100" Height="100" StrokeThickness="4" >
                                        <Ellipse.Effect>
                                            <BlurEffect Radius="1"/>
                                        </Ellipse.Effect>
                                        <Ellipse.Fill>
                                            <RadialGradientBrush Center="0.5,0.531" GradientOrigin="0.5,0.531">
                                                <GradientStop Color="#FF151515" Offset="1"/>
                                                <GradientStop Color="#FF2E2E2E" Offset="0.9"/>
                                            </RadialGradientBrush>
                                        </Ellipse.Fill>
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush EndPoint="0.503,1" StartPoint="0.497,0.09">
                                                <GradientStop Color="Black" Offset="0"/>
                                                <GradientStop Color="#FF727272" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                    </Ellipse>
                                    <Ellipse x:Name="Content" Visibility="Hidden" Effect="{StaticResource ContentEffect}" Fill="{StaticResource PressedForeground}"  StrokeThickness="10" Height="46" Canvas.Left="27" Stretch="Fill" Canvas.Top="27" Width="46"/>
                                    <ContentPresenter x:Name="contentPresenter"  Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Canvas>
                            </Viewbox>
                            <ControlTemplate.Triggers>

                                <Trigger Property="IsMouseOver" Value="true">
                                    <!--<Setter TargetName="Content" Property="Effect" Value="{StaticResource ContentEffect}"/>-->
                                    <Setter TargetName="BackgroundColor" Property="Fill" Value="{StaticResource MouseOver}"/>
                                </Trigger>

                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="BackgroundColor" Property="Fill" Value="{x:Null}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource PressedForeground}"/>
                                    <Setter TargetName="Content" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="Content" Property="Visibility" Value="Hidden"/>
                                    <!--<Setter TargetName="Content" Property="Effect" Value="{x:Null}"/>-->
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RD_CheckBoxStyle" TargetType="{x:Type CheckBox}">
                <Setter Property="Width" Value="50"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Viewbox Stretch="Fill" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Canvas x:Name="templateRoot" Width="50" Height="50" Background="Transparent" SnapsToDevicePixels="True">
                                    <Path x:Name="ContentPath" Stretch="UniformToFill" Width="50" Fill="{StaticResource TextForeground3}" Data="{StaticResource Play}"/>
                                    <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Canvas>
                            </Viewbox>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    
                                </Trigger>

                                <Trigger Property="IsPressed" Value="true">
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="ContentPath" Property="Data" Value="{StaticResource Stop}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="ContentPath" Property="Data" Value="{StaticResource Play}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RD_ElipseRadioButtonStyle" TargetType="{x:Type CheckBox}">
                <Style.Resources>

                    <DropShadowEffect x:Key="CheckedEffect" Direction="0" ShadowDepth="0" BlurRadius="50" Color="#FFB0D7FF"/>

                    <RadialGradientBrush x:Key="UnChecked" Center="0.5,0.531" GradientOrigin="0.5,0.531">
                        <GradientStop Color="#FF151515" Offset="1"/>
                        <GradientStop Color="#FF4F4F4F" Offset="0.761"/>
                    </RadialGradientBrush>

                    <RadialGradientBrush x:Key="Checked" Center="0.5,0.531" GradientOrigin="0.5,0.531">
                        <GradientStop Color="#FF151515" Offset="1"/>
                        <GradientStop Color="#FF35AAF7" Offset="0.722"/>
                    </RadialGradientBrush>
                </Style.Resources>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Viewbox>
                                <Canvas x:Name="templateRoot" Width="100" Height="100" Background="Transparent" SnapsToDevicePixels="True">
                                    <Ellipse x:Name="Ellipse" Fill="{StaticResource UnChecked}" Width="100" Height="100" StrokeThickness="10" >
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush EndPoint="0.503,1" StartPoint="0.497,0.09">
                                                <GradientStop Color="Black" Offset="0"/>
                                                <GradientStop Color="#FF727272" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                    </Ellipse>
                                    <ContentPresenter x:Name="contentPresenter"  Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                </Canvas>
                            </Viewbox>
                            <ControlTemplate.Triggers>

                                <Trigger Property="IsMouseOver" Value="true">

                                </Trigger>

                                <Trigger Property="IsPressed" Value="true">

                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource Checked}"/>
                                    <Setter TargetName="Ellipse" Property="Effect" Value="{StaticResource CheckedEffect}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource UnChecked}"/>
                                    <Setter TargetName="Ellipse" Property="Effect" Value="{x:Null}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RD_TextBoxBrightStyle" TargetType="{x:Type TextBox}">
                <Setter Property="CaretBrush" Value="{StaticResource TextForeground}"/>
                <Setter Property="Foreground" Value="{StaticResource PressedForeground}"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Canvas >
                                <Border x:Name="border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" SnapsToDevicePixels="true" BorderThickness="0,0,0,2" BorderBrush="{DynamicResource PressedForeground}" >
                                    <ScrollViewer x:Name="PART_ContentHost" Focusable="false" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Center"  HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                </Border>
                            </Canvas>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="BorderThickness" Value="0,0,0,3"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextForeground3}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                            <Condition Property="IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="RD_PasswordBoxBrightStyle" TargetType="{x:Type PasswordBox}">
                <Setter Property="CaretBrush" Value="{StaticResource PressedForeground}"/>
                <Setter Property="PasswordChar" Value="●"/>
                <Setter Property="Foreground" Value="{StaticResource PressedForeground}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">

                            <Viewbox Stretch="Fill">
                                <Border x:Name="border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" SnapsToDevicePixels="true" BorderThickness="0,0,0,2" BorderBrush="{DynamicResource PressedForeground}" >
                                    <ScrollViewer x:Name="PART_ContentHost" Margin="3" Focusable="false" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Center"/>
                                </Border>
                            </Viewbox>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="BorderThickness" Value="0,0,0,3"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">

                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                            <Condition Property="IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="RD_ExpanderBrightStyle" TargetType="{x:Type CheckBox}">
                <Style.Resources>
                    <RadialGradientBrush x:Key="MouseOver" Center="0.5,0.512" GradientOrigin="0.501,0.543">
                        <GradientStop Color="#7FAA8E65" Offset="0.972"/>
                        <GradientStop Color="#7FECECEC" Offset="1"/>
                        <GradientStop Color="#7FFF9700"/>
                    </RadialGradientBrush>

                    <LinearGradientBrush x:Key="DefaultBackground" EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF212121" Offset="1"/>
                        <GradientStop Color="#FFA8A8A8"/>
                        <GradientStop Color="#FF616161" Offset="0.045"/>
                    </LinearGradientBrush>

                    <LinearGradientBrush x:Key="MouseOverBackground" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStop Color="#FFAA8E65"/>
                        <GradientStop Color="#33F5DEBB" Offset="1"/>
                    </LinearGradientBrush>
                </Style.Resources>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{StaticResource TextForeground}"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Viewbox>
                                <Border x:Name="border" SnapsToDevicePixels="true" Background="{StaticResource PressedForeground}" CornerRadius="5" BorderThickness="5" BorderBrush="{TemplateBinding BorderBrush}">
                                    <Grid x:Name="templateRoot" Width="100" Height="100" Background="Transparent" SnapsToDevicePixels="True" Clip="M50,00 A50,50 0,1,1 40,1">
                                        <Path x:Name="Content" Margin="10" Data="{StaticResource DoubleRight}" Fill="White" Stretch="Uniform"/>
                                        <ContentPresenter x:Name="contentPresenter"  Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                </Border>
                            </Viewbox>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource TextForeground3}"/>
                                </Trigger>

                                <Trigger Property="IsPressed" Value="true">
                                  
                                    <Setter TargetName="border" Property="Background" Value="{x:Null}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="Content" Property="Data" Value="{StaticResource DoubleDown}"/>
                                  
                                 
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="Content" Property="Data" Value="{StaticResource DoubleRight}"/>
                               
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RD_TreeViewBrightStyle" TargetType="{x:Type TreeView}">
                <Setter Property="Background" Value="#FFEAF5FF"/>
                <Setter Property="BorderBrush" Value="{StaticResource TextForeground}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TreeViewItem}" >
                                        <Grid>
                                            <StackPanel Orientation="Vertical" Background="White">
                                                <DockPanel x:Name="Bd" Height="25" LastChildFill="True"  SnapsToDevicePixels="true" >
                                                    <Rectangle Width="1" Fill="White"/>
                                                    <Border Background="{StaticResource TextForeground4}" Width="29">
                                                        <CheckBox x:Name="Expander" Style="{StaticResource RD_ExpanderBrightStyle}" Margin="4" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    </Border>
                                                    <Rectangle Width="1" Fill="White"/>
                                                    <Rectangle DockPanel.Dock="Right" Width="1" Fill="White"/>
                                                    <Border Background="{StaticResource TextForeground4}">
                                                        <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    </Border>
                                                </DockPanel>
                                                <Rectangle Width="{TemplateBinding Width }" Height="1" Fill="White"/>
                                                <ItemsPresenter x:Name="ItemsHost" Width="{TemplateBinding Width}" HorizontalAlignment="Stretch"/>
                                            </StackPanel>
                                            <Rectangle x:Name="Frame" HorizontalAlignment="Stretch" Margin="1,0,1,1" VerticalAlignment="Stretch" StrokeThickness="2" Stroke="Transparent"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsExpanded" Value="false">
                                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                            </Trigger>
                                            <Trigger Property="HasItems" Value="false">
                                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter Property="Stroke" TargetName="Frame" Value="{StaticResource PressedForeground}"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true"/>
                                                    <Condition Property="IsSelectionActive" Value="false"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                            </MultiTrigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                                    <Setter Property="ItemsPanel">
                                        <Setter.Value>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel/>
                                            </ItemsPanelTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeView}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                <ScrollViewer x:Name="_tv_scrollviewer_" Background="{TemplateBinding Background}" CanContentScroll="false" Focusable="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                                    <Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="RD_ToggleButtonBrightStyle" TargetType="{x:Type CheckBox}">
                <Style.Resources>
                    <RadialGradientBrush x:Key="MouseOver" Center="0.5,0.512" GradientOrigin="0.501,0.543">
                        <GradientStop Color="#7FAA8E65" Offset="0.972"/>
                        <GradientStop Color="#7FECECEC" Offset="1"/>
                        <GradientStop Color="#7FFF9700"/>
                    </RadialGradientBrush>

                    <LinearGradientBrush x:Key="DefaultBackground" EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF212121" Offset="1"/>
                        <GradientStop Color="#FFA8A8A8"/>
                        <GradientStop Color="#FF616161" Offset="0.045"/>
                    </LinearGradientBrush>

                    <LinearGradientBrush x:Key="MouseOverBackground" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStop Color="#FFAA8E65"/>
                        <GradientStop Color="#33F5DEBB" Offset="1"/>
                    </LinearGradientBrush>
                </Style.Resources>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{StaticResource TextForeground}"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Viewbox Width="130" Height="22">
                             
                                <Border Width="130" BorderThickness="0,0,0,1"  BorderBrush="{StaticResource PressedForeground}">
                                    <Border x:Name="border" Width="18" Height="18" Margin="1" VerticalAlignment="Center" HorizontalAlignment="Right" SnapsToDevicePixels="true" Background="{StaticResource PressedForeground}" >
                                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" >
                                            <Path x:Name="Content" Margin="3" Data="{StaticResource DoubleLeft}" Fill="White" Stretch="Uniform"/>
                                            <ContentPresenter x:Name="contentPresenter"  Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                    </Border>
                                </Border>
                            </Viewbox>
                            <ControlTemplate.Triggers>

                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource TextForeground3 }"/>
                                </Trigger>

                                <Trigger Property="IsPressed" Value="true">
                                 
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="Content" Property="Data" Value="{StaticResource DoubleDown}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="Content" Property="Data" Value="{StaticResource DoubleLeft}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RD_ComboBoxStyle" TargetType="{x:Type ComboBox}">
                <Style.Resources>
                    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="#1F26A0DA"/>
                    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="#A826A0DA"/>
                    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#3D26A0DA"/>
                    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="#FF26A0DA"/>
                    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#2E0080FF"/>
                    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="#99006CD9"/>
                    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#3DDADADA"/>
                    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="#FFDADADA"/>
                    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="#FF26A0DA"/>
                </Style.Resources>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="Padding" Value="6,3,5,3"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Viewbox>
                                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                    </Grid.ColumnDefinitions>
                                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                        <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                            <Border x:Name="dropDownBorder" Background="{StaticResource TextForeground4}">
                                                <ScrollViewer x:Name="DropDownScrollViewer" Margin="1">
                                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                        <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                            <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                                        </Canvas>
                                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    </Grid>
                                                </ScrollViewer>
                                            </Border>
                                        </Themes:SystemDropShadowChrome>
                                    </Popup>

                                    <CheckBox x:Name="toggleButton" Margin="1"  Grid.Column="0" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource RD_ToggleButtonBrightStyle}"/>
                                    <TextBlock Foreground="{StaticResource PressedForeground}">
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </TextBlock>
                                </Grid>
                            </Viewbox>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="true"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </MultiTrigger>
                                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type ComboBoxItem}">
                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                            <Setter Property="Padding" Value="4,1"/>
                            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" CornerRadius="2">
                                            <TextBlock Foreground="White">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </TextBlock>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="False"/>
                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Border}"/>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="True"/>
                                                    <Condition Property="IsMouseOver" Value="False"/>
                                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Border}"/>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="True"/>
                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Border}"/>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="True"/>
                                                    <Condition Property="IsMouseOver" Value="False"/>
                                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}"/>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="False"/>
                                                    <Condition Property="IsMouseOver" Value="False"/>
                                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border}"/>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="False"/>
                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="#5426A0DA"/>
                                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF26A0DA"/>
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

            

        </ResourceDictionary>
    </Application.Resources>
</Application>
